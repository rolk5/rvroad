        // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        /**
         * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
         * 
         * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ data.json
         * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
         */
        async function loadData() {
            try {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                document.getElementById('loader').style.display = 'block';
                document.getElementById('error-message').style.display = 'none';
                
                // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ñ–∞–π–ª—É data.json
                const response = await fetch('esnEnd.json');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
                if (!response.ok) {
                    throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status} ${response.statusText}`);
                }
                
                // –ü–∞—Ä—Å–∏–º JSON-–¥–∞–Ω–Ω—ã–µ
                const data = await response.json();
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                document.getElementById('loader').style.display = 'none';
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
                generateNavigation(data.–≠–°–ù);
                generateContent(data.–≠–°–ù);
                
                // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                if (data.–≠–°–ù.length > 0) {
                    const firstCode = data.–≠–°–ù[0]['–®–∏—Ñ—Ä –≠–°–ù'].replace(/[.-]/g, '-');
                    document.querySelector(`.nav-item[data-target="${firstCode}"]`).classList.add('active');
                    
                    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
                    setTimeout(() => scrollToWork(firstCode), 300);
                }
                
            } catch (error) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
                document.getElementById('loader').style.display = 'none';
                const errorMessage = document.getElementById('error-message');
                errorMessage.style.display = 'block';
                errorMessage.innerHTML = `
                    <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
                    <p>${error.message}</p>
                    <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</p>
                    <ul>
                        <li>–§–∞–π–ª data.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ</li>
                        <li>–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–µ JSON-–¥–∞–Ω–Ω—ã–µ</li>
                        <li>–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É</li>
                        <li>–°–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É</li>
                    </ul>
                `;
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            }
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
         * 
         * @param {Array} works - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –≠–°–ù
         * 
         * –°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —à–∏—Ñ—Ä–æ–≤ –≠–°–ù –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
         */
        function generateNavigation(works) {
            let navHTML = '';

            
            
            works.forEach(work => {
                // –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π HTML-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ —à–∏—Ñ—Ä–∞
                const anchor = work['–®–∏—Ñ—Ä –≠–°–ù'];

                // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                navHTML += `
                    <div class="nav-item" 
                         data-target="${anchor}" 
                         onclick="scrollToWork('${anchor}')">
                        <p class = "nav-h">${work['–®–∏—Ñ—Ä –≠–°–ù']}</p>
                        <p class = "nav-u">${work['–ï–¥']}</p>
                        <p class = "nav-p">${work.–†–∞–±–æ—Ç–∞}</p>
                    </div>
                `;
            });
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ DOM
            document.getElementById('nav-list').innerHTML = navHTML;
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
         * 
         * @param {Array} works - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –≠–°–ù
         * 
         * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≠–°–ù —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
         */
        function generateContent(works) {
            let contentHTML = '';
            
            works.forEach(work => {
                // –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π HTML-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ —à–∏—Ñ—Ä–∞
                const anchor = work['–®–∏—Ñ—Ä –≠–°–ù'];
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Ä–µ—Å—É—Ä—Å–æ–≤
                const resourceSections = [
                    '–¢—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç—ã', '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ú–∞—à–∏–Ω—ã', 
                    '–†–∞—Å—Ö–æ–¥ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç'
                ].filter(section => work[section] && work[section].length > 0);
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤–∫–ª–∞–¥–æ–∫
                let tabsHTML = '';
                let tabContentHTML = '';



                
                resourceSections.forEach((section, index) => {

                                  // –î–æ–±–∞–≤–ª—è–µ–º –∫ —Ä–µ—Å—É—Ä—Å–∞–º —ç–º–æ–¥–∑–∏
                function emojyAdd (section) {
                  if (section == "–¢—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç—ã") {
                    return section ="üë∑–¢—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç—ã"
                  } 
                  else if (section == "–ú–∞—à–∏–Ω—ã") {
                    return section = "üèó–ú–∞—à–∏–Ω—ã"
                  }
                  else if (section == "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã") {
                    return section = "üî©–ú–∞—Ç–µ—Ä–∏–∞–ª—ã"
                  }
                  else if (section == "–†–∞—Å—Ö–æ–¥ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è") {
                    return section = "üöú–†–∞—Å—Ö–æ–¥ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"
                  }
                  else if (section == "–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç") {
                    return section = "üõ†–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç"
                  }
                };
                    console.log(emojyAdd(section));
                    //console.log(section.replace(emojyAdd(section)));
                    // HTML –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
                    tabContentHTML += `
                    <p class = "workTypeHeader">${emojyAdd(section)}</p>    
                    <div class="resource-tabs">
                      ${generateResourceTable(work[section])}
                    </div>
                    `;
                });


                
                // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≠–°–ù
                contentHTML += `
                    <div id="${anchor}" class="work-card">
                        <div class="work-header">
                            <h2 class="work-title">${work.–†–∞–±–æ—Ç–∞}</h2>
                            <div class="work-meta">
                                <div class="work-code">${work['–®–∏—Ñ—Ä –≠–°–ù']}</div>
                                <div class="work-unit">${work.–ï–¥}</div>
                            </div>
                        </div>

                        ${tabContentHTML}
                    </div>
                `;
            });
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ DOM
            document.getElementById('content').innerHTML = contentHTML;
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ä–µ—Å—É—Ä—Å–æ–≤
         * 
         * @param {Array} resources - –ú–∞—Å—Å–∏–≤ —Ä–µ—Å—É—Ä—Å–æ–≤
         * @returns {string} HTML —Ç–∞–±–ª–∏—Ü—ã —Ä–µ—Å—É—Ä—Å–æ–≤
         */
        function generateResourceTable(resources) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
            if (!resources || resources.length === 0) {
                return '<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>';
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
            let rowsHTML = '';
            resources.forEach(resource => {
                rowsHTML += `
                    <tr>
                        <td class="resource-name">${resource.–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ}</td>
                        <td>${resource['–ï–¥. –∏–∑–º.'] || '-'}</td>
                        <td class="resource-value">${resource['–†–µ—Å—É—Ä—Å –Ω–∞ –µ–¥. –∏–∑–º.']}</td>
                        <td>${resource.–®–∏—Ñ—Ä || '-'}</td>
                    </tr>
                `;
            });
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º HTML —Ç–∞–±–ª–∏—Ü—ã
            return `
                <table class="resource-table">
                    <thead>
                        <tr>
                            <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                            <th>–ï–¥. –∏–∑–º.</th>
                            <th>–†–µ—Å—É—Ä—Å</th>
                            <th>–®–∏—Ñ—Ä</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${rowsHTML}
                    </tbody>
                </table>
            `;
        }
        
        /**
         * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
         * 
         * @param {HTMLElement} button - –ù–∞–∂–∞—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –≤–∫–ª–∞–¥–∫–∏
         * @param {string} tabId - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
         */
        function switchTab(button, tabId) {
            // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∫–ª–∞–¥–æ–∫
            const tabsContainer = button.closest('.resource-tabs');
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –≤–∫–ª–∞–¥–æ–∫
            tabsContainer.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            button.classList.add('active');
            
            // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–æ–∫
            const contentContainer = tabsContainer.nextElementSibling;
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–Ω—Ç—ã –≤–∫–ª–∞–¥–æ–∫
            contentContainer.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            document.getElementById(tabId).classList.add('active');
        }
        
        /**
         * –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç—É –≠–°–ù
         * 
         * @param {string} anchor - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
         */
        function scrollToWork(anchor) {
            const element = document.getElementById(anchor);
            if (element) {
                // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
                document.querySelectorAll('.highlight').forEach(el => {
                    el.classList.remove('highlight');
                });
                
                // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —ç–ª–µ–º–µ–Ω—Ç—É
                element.scrollIntoView({behavior: 'smooth', block: 'start'});
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
                element.classList.add('highlight');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                document.querySelectorAll('.nav-item').forEach(item => {
                    item.classList.remove('active');
                });
                document.querySelector(`.nav-item[data-target="${anchor}"]`).classList.add('active');
            }
        }
        
        // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        window.switchTab = switchTab;
        window.scrollToWork = scrollToWork;
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        document.addEventListener('DOMContentLoaded', loadData);